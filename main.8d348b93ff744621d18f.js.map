{"version":3,"sources":["webpack:///./js/refs.js","webpack:///./js/fetchWeather.js","webpack:///./js/getGeoPosition.js","webpack:///./index.js","webpack:///./js/handlerWeather.js","webpack:///./templates/dataTemplate.hbs"],"names":["refs","weather","document","querySelector","spinner","searchForm","fetchWeather","query","querySearch","Promise","resolve","reject","classList","remove","fetch","proxy","then","response","ok","json","Error","statusText","data","error","PNotify","notice","title","info","text","add","htmlData","dataTepmlate","innerHTML","insertAdjacentHTML","catch","console","log","getGeoPosition","navigator","geolocation","getCurrentPosition","maximumAge","location","coords","latitude","longitude","success","delay","weatherData","createWeather","alert","addEventListener","event","preventDefault","submitValue","currentTarget","city","value","submitData","Handlebars","__webpack_require__","module","exports","template","compiler","main","container","depth0","helpers","partials","stack1","alias1","lambda","alias2","escapeExpression","name","current","weather_icons","weather_descriptions","region","temperature","humidity","wind_speed","useData"],"mappings":"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","file":"main.8d348b93ff744621d18f.js","sourcesContent":["export default {\r\n  weather: document.querySelector('#weather'),\r\n  spinner: document.querySelector('#spinner'),\r\n  searchForm: document.querySelector('#search-form'),\r\n};\r\n","import refs from './refs';\r\nimport dataTepmlate from '../templates/dataTemplate.hbs';\r\n\r\nfunction fetchWeather(query) {\r\n  const baseUrl = 'http://api.weatherstack.com';\r\n  const proxy = 'https://cors-anywhere.herokuapp.com/';\r\n  const sectionUrl = '/current';\r\n  const access_key = '?access_key=41850987af7b6f6cb6c8cf07660f164d';\r\n  const querySearch = `&query=${query}`;\r\n\r\n  return new Promise((resolve, reject) => {\r\n    refs.spinner.classList.remove('is-hidden');\r\n    fetch(proxy + baseUrl + sectionUrl + access_key + querySearch)\r\n      .then(response => {\r\n        if (response.ok) {\r\n          return response.json();\r\n        }\r\n        throw new Error(response.statusText);\r\n      })\r\n      .then(data => {\r\n        //   console.log(data);\r\n        if (data.error) {\r\n          PNotify.notice({\r\n            title: `${data.error.info}`,\r\n            text: 'Ми не найшли цього міста, попробуйте ще раз!',\r\n          });\r\n          refs.spinner.classList.add('is-hidden');\r\n\r\n          return;\r\n        }\r\n        const htmlData = dataTepmlate(data);\r\n        refs.weather.innerHTML = '';\r\n        refs.weather.classList.remove('is-hidden');\r\n        refs.weather.insertAdjacentHTML('beforeend', htmlData);\r\n        refs.spinner.classList.add('is-hidden');\r\n      })\r\n      .catch(error => console.log(error));\r\n  });\r\n}\r\n\r\nexport default fetchWeather;\r\n","import fetchWeather from './fetchWeather';\r\n\r\nimport PNotify from 'pnotify/dist/es/PNotify.js';\r\nimport 'pnotify/dist/PNotifyBrightTheme.css';\r\n\r\n// Показувати погоду використовуючи геодані, після надання доступу юзером\r\nfunction getGeoPosition() {\r\n  return new Promise((resolve, reject) => {\r\n    navigator.geolocation.getCurrentPosition(resolve, reject, {\r\n      maximumAge: 1800000,\r\n    });\r\n  });\r\n}\r\n\r\ngetGeoPosition()\r\n  .then(location => `${location.coords.latitude}, ${location.coords.longitude}`)\r\n  .then(data => {\r\n    // console.log(data + ' data');\r\n    PNotify.success({\r\n      text: 'Права доступа до геоданих надані!',\r\n      delay: 2000,\r\n    });\r\n    return fetchWeather(data);\r\n  })\r\n  .then(weatherData => {\r\n    // console.log(weatherData + ' weatherData');\r\n    createWeather(weatherData);\r\n  })\r\n  .catch(error => {\r\n    PNotify.alert({\r\n      text:\r\n        'Сайт не має доступу до геоданих, використайте пошук по імені міста.',\r\n      delay: 2000,\r\n    });\r\n  });\r\n\r\nexport default getGeoPosition;\r\n","import './styles.css';\nimport './spinner.css';\n\nimport refs from './js/refs';\nimport handlerWeather from \"./js/handlerWeather\"\nimport getGeoPosition from './js/getGeoPosition';\n\nimport 'pnotify/dist/PNotifyBrightTheme.css';\n\n\n// import getGeoPosition from './js/getGeoPosition'\n\n\n\nrefs.searchForm.addEventListener('submit', handlerWeather);\n","import fetchWeather from './fetchWeather';\r\n\r\nimport PNotify from 'pnotify/dist/es/PNotify.js';\r\nimport 'pnotify/dist/PNotifyBrightTheme.css';\r\n\r\nexport default function handlerWeather(event) {\r\n  event.preventDefault();\r\n  const submitValue = event.currentTarget.city.value;\r\n  console.log(submitValue);\r\n\r\n  fetchWeather(submitValue)\r\n    .then(submitData => {\r\n      fetchWeather(submitData);\r\n      // console.log(submitData);\r\n    })\r\n    .catch(error => {\r\n      PNotify.error({\r\n        text: 'По Вашому запиту нічього не знайдено! Попробуйте ще раз).',\r\n        delay: 2000,\r\n      });\r\n    });\r\n}\r\n","var Handlebars = require(\"../../node_modules/handlebars/runtime.js\");\nfunction __default(obj) { return obj && (obj.__esModule ? obj[\"default\"] : obj); }\nmodule.exports = (Handlebars[\"default\"] || Handlebars).template({\"compiler\":[7,\">= 4.0.0\"],\"main\":function(container,depth0,helpers,partials,data) {\n    var stack1, alias1=container.lambda, alias2=container.escapeExpression;\n\n  return \"<h2 class=\\\"title\\\">TODAY in \"\n    + alias2(alias1(((stack1 = (depth0 != null ? depth0.location : depth0)) != null ? stack1.name : stack1), depth0))\n    + \" </h2>\\r\\n<img class=\\\"icon\\\" src=\\\"\"\n    + alias2(alias1(((stack1 = (depth0 != null ? depth0.current : depth0)) != null ? stack1.weather_icons : stack1), depth0))\n    + \"\\\" alt=\\\"\"\n    + alias2(alias1(((stack1 = (depth0 != null ? depth0.current : depth0)) != null ? stack1.weather_descriptions : stack1), depth0))\n    + \"\\\" />\\r\\n\\r\\n<div class=\\\"info-weather\\\">\\r\\n  <p>Location: <span data-field=\\\"location\\\">\"\n    + alias2(alias1(((stack1 = (depth0 != null ? depth0.location : depth0)) != null ? stack1.name : stack1), depth0))\n    + \", \"\n    + alias2(alias1(((stack1 = (depth0 != null ? depth0.location : depth0)) != null ? stack1.region : stack1), depth0))\n    + \"</span></p>\\r\\n  <p>Temperature: <span data-field=\\\"temp\\\">\"\n    + alias2(alias1(((stack1 = (depth0 != null ? depth0.current : depth0)) != null ? stack1.temperature : stack1), depth0))\n    + \"&#8451;</span></p>\\r\\n  <p>Humidity: <span data-field=\\\"humidity\\\">\"\n    + alias2(alias1(((stack1 = (depth0 != null ? depth0.current : depth0)) != null ? stack1.humidity : stack1), depth0))\n    + \"</span></p>\\r\\n  <p>Wind: <span data-field=\\\"wind\\\">\"\n    + alias2(alias1(((stack1 = (depth0 != null ? depth0.current : depth0)) != null ? stack1.wind_speed : stack1), depth0))\n    + \"kph</span></p>\\r\\n  <p>Conditions: <span data-field=\\\"conditions\\\">\"\n    + alias2(alias1(((stack1 = (depth0 != null ? depth0.current : depth0)) != null ? stack1.weather_descriptions : stack1), depth0))\n    + \"</span></p>\\r\\n</div>\";\n},\"useData\":true});"],"sourceRoot":""}